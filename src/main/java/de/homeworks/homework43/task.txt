Задание: «Amazon Store»
1. Абстрактный класс Product
    Создайте абстрактный класс, отражающий понятие «товар» (product).
    Определите в нём необходимые поля:
        название (name);
        цена (price).
    Реализуйте абстрактный метод, который будет возвращать описание товара
    (псевдо-метод getDescription()).
2. Потомки класса Product
    Создайте, как минимум, два конкретных класса, наследующих Product.
    Например, «Книга» и «Электроника».
    Добавьте каждому классу собственное специфичное поле:
        «автор» у книг;
        «бренд» у электроники.
    Переопределите метод описания товара так, чтобы он учитывал специфичные поля
    (например, «Книга [название] от [автор], цена: …»).
3. Обобщённый класс Cart<T extends Product>
    Определите класс, моделирующий «корзину» для определённого типа товаров.
    Задайте в классе поле для хранения списка товаров (например, List<T>).
    Добавьте методы для работы с корзиной:
        добавление товара;
        удаление товара по названию;
        подсчёт итоговой стоимости;
        вывод информации о каждом товаре в корзине.
4. Демонстрация работы
    Продумайте, как вы будете проверять вашу реализацию в коде
    (не пишите здесь готовые методы, а только план).
    Создайте несколько объектов разных типов (книги, электроника и т.д.),
    добавьте их в соответствующие корзины.
    Попробуйте удалить товар по названию и выведите результат (получилось ли удалить).
    Посчитайте суммарную стоимость в корзине после добавления и удаления товаров.
    Выведите информацию обо всех товарах, например, при помощи переопределённого
    метода описания.
5. Расширенные задачи (по желанию)
    Интерфейс сортировки:
        реализуйте возможность сортировать товары по цене,
        если ваш класс Product реализует Comparable.
    Фильтрация:
        добавьте функцию фильтрации товаров по различным критериям
        (например, по бренду, по автору, по ценовому диапазону).
    Расширенный класс
        Warehouse<T extends Product>: вместо (или параллельно с) Cart
        создайте класс «склад», где хранится множество товаров одного типа,
        и реализуйте методы типа «поиск товаров», «пополнение товара»,
        «вывод количества оставшегося на складе» и т.д.
Итоговая цель
    Продемонстрировать умение применять Generics: создавать обобщённый класс,
    ограничивающий тип параметра (T extends Product), и манипулировать коллекцией объектов.
    Показать понимание принципов ООП (наследование, полиморфизм, инкапсуляция).
    Реализовать простую концепцию «магазина» с различными видами товаров,
    которые могут храниться в одном месте (например, в объекте «корзины» или «склада»),
    и обрабатываться единообразно за счёт общего родителя Product.